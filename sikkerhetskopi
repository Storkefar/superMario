# Importing Image from PIL package
from PIL import Image
from sense_hat import SenseHat
import time
import os

#Gir SenseHat-en navnet sense, for bruk senere i koden
sense = SenseHat()
#Lyset er veldig skarpt, vi forventer at samtlige som prøver dette spillet vil få veldig vondt i øynene
#ettersom de ikke vil være i stand til å legge det fra seg. dette er vi som viser hensyn til andre og oss selv
sense.lowlight = True

ant_spill = 3


def tre():
    W = [100,100,100]
    O = [0,0,0]
    img = [O, O, W, W, W, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, O, W, W, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, W, W, W, W, O, O,]
    return img


def to():
    W = [100,100,100]
    O = [0,0,0]
    img = [O, O, W, W, W, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, O, O, O, W, O, O,
        O, O, W, W, W, W, O, O,
        O, O, W, O, O, O, O, O,
        O, O, W, O, O, O, O, O,
        O, O, W, O, O, O, O, O,
        O, O, W, W, W, W, O, O,]
    return img


def en():
    W = [100,100,100]
    O = [0,0,0]
    img = [O, O, O, O, W, O, O, O,
        O, O, O, W, W, O, O, O,
        O, O, W, O, W, O, O, O,
        O, O, O, O, W, O, O, O,
        O, O, O, O, W, O, O, O,
        O, O, O, O, W, O, O, O,
        O, O, O, O, W, O, O, O,
        O, O, O, W, W, W, O, O,]
    return img

bilder = [tre,to,en]

#dette er 'tyngdegraften'. dette er så langt ned karakteren faller per iterasjon
farty = 0.17

#henter informasjon om gitt piksel. 
def omgivelser(x,y,grense):
    #dersom piksel(x,y) ikke er samme farge som grensefargen(fargen vi tillater karakteren å gå på)
    #returnerer funksjonen True
    if sense.get_pixel(x,y) != grense and y <= 7:
        return True
    
#funksjonen fall er 'fysikken bak ett fall. dette er veldig enkelt løst. og tar ikke høyde for akselerasjon
#men har en konstant fart.
#dette kan potensielt forbedres på sikt
def fall(y):
    fall.counter += farty
    if fall.counter >= 1 and y <= 6:
        y += 1
        fall.counter = 0

    #y er i dette tilfellet modifisert mhp 'gravitasjonen'
    return y

#fall.counter hjelper med å holde styr på antall ganger funksjonen er kjørt
fall.counter = 0

#funksjonen hopp fungerer som en invers fall()
def hopp(y):
    hopp.counter += farty
    if hopp.counter >= 1 and y >= 1:
        y -= 1
        hopp.counter = 0
    
    return y

#holder styr på hvor mange ganger hopp funksjonen er kjørt
hopp.counter = 0

def velger():
    cnt = 1
    while True:

        sense.set_pixels(bilder[ant_spill-cnt]())

        event = sense.stick.wait_for_event()
        if event.direction == 'right' and event.action == 'pressed':
            cnt += 1
        elif event.direction == 'left' and event.action == 'pressed':
            cnt -= 1
        elif event.direction == 'middle' and event.action == 'pressed':
            return cnt
        if cnt > ant_spill:
            cnt = 1
        elif cnt < 1:
            cnt = ant_spill

def mario(bilde):

    #vinneren av spillet baseres blant annet på tid. dette er for å starte 'stoppeklokka'
    starttid = time.time()
    
    #Åpner bildet, dette gjør det mulig å hente ut informasjon fra bildet, samt skrive, dersom det blir nødvendig
    im = Image.open(bilde)

    #dette er fargen vi har valgt å bruke som grense. typ gulv, tak, vegger, osv.
    grensefarge = [112, 252, 0]

    #fi = im.getpixel((1,0))

    #treffer du denne fargen vinner du
    vinner = [248, 232, 56]

    #denne fargen er farlig
    lava = [240, 64, 48]

    #henter høyden og bredden på det importerte bildet. dette brukes til å finne grensene på banen.
    width,height = im.size

    #antall iterasjoner koden må gjennom med farty for at karakteren skal kunne hoppe to piksler høyt, gitt 'tyngdekraften'
    anti = 0

    #offsetverdiene bestemmer hvor i bildet matrisen bildet blir plassert. (øvre venstre hjørne er (offsetx,offsety)
    offsetx = 0
    offsety = height - 8

    #Velger startposisjonen.
    posx = 4
    posy = 4

    kjor = True    
    while kjor:

        #vi ønsker ikke at programmet skal stoppe opp og vente på 
        for event in sense.stick.get_events():
            if (event.direction == 'right' and event.action == 'pressed' 
            and posx <= 6 and omgivelser(posx+1,posy,grensefarge) == True):
                posx += 1

            elif (event.direction == 'left' and event.action == 'pressed' 
            and posx >= 1 and omgivelser(posx-1,posy,grensefarge) == True):
                posx -= 1
            
            elif (event.direction == 'up' and event.action == 'pressed' 
            and posy >= 1 and omgivelser(posx,posy-1,grensefarge) == True 
            and sense.get_pixel(posx,posy+1) == grensefarge):
                anti = (2/farty) + 1 #2 hopp / farty
            
        if anti > 0 and omgivelser(posx,posy-1,grensefarge) == True:
            anti -= 1
            posy = hopp(posy)
            fall.counter = 0

        if posy != 7:
            if omgivelser(posx,posy+1,grensefarge) == True:
                posy = fall(posy)


        if posx > 4 and offsetx != width-8:
            offsetx += 1
            posx -= 1

        elif posx <3 and offsetx != 0:
            offsetx -= 1
            posx += 1
        

        if posy > 4 and offsety != height-8:
            offsety += 1
            posy -= 1

        elif posy <3 and offsety != 0:
            offsety -= 1
            posy += 1

        
        for i in range(offsetx, offsetx+8):
            for j in range(offsety,offsety+8):
                rgb = im.getpixel((i,j))
                #if i != posx and j != posy:
                sense.set_pixel(i-offsetx,j-offsety,rgb[0],rgb[1],rgb[2])

        if sense.get_pixel(posx,posy) == vinner:
            tid = str(round(time.time() - starttid,2))
            print(tid)
            return tid
        else:
            sense.set_pixel(posx,posy,100,100,100)

        time.sleep(0.05)
def main():

    sense.show_message('Velg Level')

    spill = velger()

    if spill == 1:
        for img in bilder:
            sense.set_pixels(img())
            time.sleep(1)

        sense.show_message('Din tid: ' + mario('mario_bane2.png'))

    elif spill == 2:
        for img in bilder:
            sense.set_pixels(img())
            time.sleep(1)

        sense.show_message('Din tid: ' + mario('mario_bane3.png'))

    elif spill == 3:
        sense.show_message('Kommer snart!')

while True:
    main()
